import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from tok import TOKEN #–ò–º–ø—Ä–æ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º TOKEN = ''
from func import create_betting_menu, create_main_menu, create_bet_selection_keyboard, \
    create_cancel_keyboard, create_matches_keyboard

vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

users_balance = {}
users_bets = {}


def send_message(user_id, message, keyboard=None):
    vk.messages.send(
        user_id=user_id,
        message=message,
        random_id=0,
        keyboard=keyboard
    )


def main():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            user_id = event.user_id
            message_text = event.text.lower()

            if message_text == "–Ω–∞—á–∞—Ç—å":
                users_balance[user_id] = 5000
                send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å—Ç–∞–≤–æ–∫ –Ω–∞ –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –º–∞—Ç—á–∏.",
                             create_main_menu())

            elif message_text == "–±–∞–ª–∞–Ω—Å üí∏":
                balance = users_balance.get(user_id, 0)
                send_message(user_id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance}", create_main_menu())

            elif message_text == "–∏—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫ üëë":
                bets_history = users_bets.get(user_id, [])
                history_text = "\n".join(bets_history) if bets_history else "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞–≤–æ–∫"
                send_message(user_id, f"–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö —Å—Ç–∞–≤–æ–∫:\n{history_text}", create_main_menu())

            elif message_text == "—Å—Ç–∞–≤–∫–∏ üèÜ":
                send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É:", create_betting_menu())

            elif message_text == "–Ω–∞–∑–∞–¥":
                send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", create_main_menu())

            elif message_text in ["cs 2üéØ", "dota 2üì∏"]:
                send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç—á:", create_matches_keyboard(message_text))

            elif message_text in ["psuti-hqd", "nvpg-navi", "g2-c9", "vitality-spirit"]:
                users_bets[user_id] = {"match": message_text.capitalize()}
                send_message(user_id,
                             f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞—Ç—á: {message_text.capitalize()}. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É: –ü1, –ü2 –∏–ª–∏ –Ω–∏—á—å—è.",
                             create_bet_selection_keyboard(users_bets[user_id]["match"]))

            elif "–ø1" in message_text.lower() or "–ø1" in message_text.lower() or "–Ω–∏—á—å—è" in message_text.lower():
                users_bets[user_id]["bet"] = message_text.capitalize()
                send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏:", create_cancel_keyboard())


            elif message_text.isdigit() and int(message_text) > 0 and "bet" in users_bets[user_id]:
                users_bets[user_id]["amount"] = int(message_text)
                place_bet(user_id)
                send_message(user_id, get_bet_confirmation(user_id), create_main_menu())

            elif message_text == "–æ—Ç–º–µ–Ω–∞":
                send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É: –ü1, –ü2 –∏–ª–∏ –Ω–∏—á—å—è.", create_bet_selection_keyboard())


def place_bet(user_id):
    user_bet = users_bets.get(user_id, {})
    match = user_bet.get("match")
    bet = user_bet.get("bet")
    amount = user_bet.get("amount")

    coefficients = {
        "psuti-hqd": {"–ü1": 1.5, "–ü2": 2.0, "–ù–∏—á—å—è": 1.8},
        "nvpg-navi": {"–ü1": 1.7, "–ü2": 1.9, "–ù–∏—á—å—è": 1.5},
        "g2-c9": {"–ü1": 1.6, "–ü2": 1.7, "–ù–∏—á—å—è": 1.6},
        "vitality-spirit": {"–ü1": 1.8, "–ü2": 2.0, "–ù–∏—á—å—è": 1.9}
    }

    match_coef = coefficients.get(match.lower(), {})
    coef = match_coef.get(bet.lower(), 0)

    if user_id in users_balance:
        users_balance[user_id] -= amount
    else:
        users_balance[user_id] = -amount
    if user_id in users_bets:
        if "bets" in users_bets[user_id]:
            users_bets[user_id]["bets"].append(f"–ú–∞—Ç—á: {match}, –°—Ç–∞–≤–∫–∞: {bet}, –ö—ç—Ñ: {coef}, –¶–µ–Ω–∞: {amount}")
        else:
            users_bets[user_id]["bets"] = [f"–ú–∞—Ç—á: {match}, –°—Ç–∞–≤–∫–∞: {bet}, –ö—ç—Ñ: {coef}, –¶–µ–Ω–∞: {amount}"]
    else:
        users_bets[user_id] = {"bets": [f"–ú–∞—Ç—á: {match}, –°—Ç–∞–≤–∫–∞: {bet}, –ö—ç—Ñ: {coef}, –¶–µ–Ω–∞: {amount}"]}

    return coef


def get_bet_confirmation(user_id):
    user_bet = users_bets[user_id]
    match = user_bet["match"]
    bet = user_bet["bet"]
    amount = user_bet["amount"]
    return f"–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –º–∞—Ç—á '{match}', –Ω–∞ '{bet}', —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ '{amount}'."


if __name__ == '__main__':
    main()